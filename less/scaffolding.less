//
// Scaffolding
// --------------------------------------------------
// Reset the box-sizing
//
// Heads up! This reset may cause conflicts with some third-party widgets.
// For recommendations on resolving such conflicts, see
// http://getbootstrap.com/getting-started/#third-box-sizing

* {
  box-sizing: border-box;
}

*:after,
*:before {
  box-sizing: border-box;
}
// Body reset

html {
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  height: 100%;
}

html:not(.non-responsive) {
  .main-content {
    @media (max-width: @screen-xs-max) {
      width: 100%; // Overriding Bootstrap's grid system
    }
  }
}

body {
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-family: @font-family-base;
  font-size: @font-size-body-desktop;
  font-style: normal;
  font-variant: normal;
  font-weight: 400;
  letter-spacing: 0.3px;
  line-height: @line-height-base;
  color: @text-color;
  background-color: @body-bg;
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;
  @media (max-width: @screen-xs-max) {
    -webkit-overflow-scrolling: touch;
    font-size: @font-size-body;
  }
}

// Reset fonts for relevant elements

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
// Links

a {
  color: @link-color;
  text-decoration: none;

  &:hover {
    color: @link-hover-color;
    text-decoration: @link-hover-decoration;
  }

  &:focus {
    color: @link-hover-color;
    text-decoration: none;
    .tab-focus();
  }

  &:visited {
    color: @link-visited-color;
  }
}

// Figures
//
// We reset this here because previously Normalize had no `figure` margins. This
// ensures we don't break anyone's use of the element.

figure {
  margin: 0;
}
// Images

img {
  vertical-align: middle;
}
// Responsive images (ensure images don't scale beyond their parents)

.img-responsive {
  .img-responsive();
}
// Rounded corners

.img-rounded {
  border-radius: @border-radius-large;
}
// Image thumbnails
//
// Heads up! This is mixin-ed into thumbnails.less for `.thumbnail`.

.img-thumbnail {
  padding: @thumbnail-padding;
  line-height: @line-height-base;
  background-color: @thumbnail-bg;
  border: 1px solid @thumbnail-border;
  border-radius: @thumbnail-border-radius;
  transition: all 0.2s ease-in-out;
  // Keep them at most 100% wide
  .img-responsive(block);
}
// Perfect circle

.img-circle {
  border-radius: 50%; // set radius in percents
}
// Horizontal rules

hr {
  margin-top: @margin10;
  margin-bottom: @line-height-computed;
  border: 0;
  border-top: 1px solid @hr-border;
  // KU:
  width: 100%;
  float: left;
}
// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}
// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}
// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}
@media (max-width: @screen-sm) {
  .btn,
  .form-control {
    // font-size: @font-size-large!important;
    height: auto!important;
  }
}

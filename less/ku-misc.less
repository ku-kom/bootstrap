//
// KU misc.
// Various extra classes that don't belong in other .less files
// ---------------------------------------------------------------
// Main content part

#pagewrapper {
  display: flex;
  flex-flow: column nowrap;
  min-height: 100%;
}

main {
  flex: 1 0 auto;
  background-color: @white-color;
  backface-visibility: hidden; //Fix weired flickering
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  &:extend(.clearfix all);
  @media (min-width: @screen-sm-min) {
    width: @container-sm;
    margin: 0 auto;
  }
  @media (min-width: @screen-md-min) {
    width: @container-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @container-lg;
  }
}

footer,
header,
nav {
  flex: none;
}

.main-content {
  padding-top: @grid-gutter-height;
  padding-bottom: @grid-gutter-height;

  .front-page & {
    padding-top: 0;
  }

  .row {
    > [class*="col-"] {
      &:not(.form-group) {
        margin-bottom: @margin20;
      }
    }

    &.breadcrumbs {
      margin-bottom: @margin0;
    }
  }
}

.main-area {
  flex-grow: 1;
  @media (max-width: @screen-sm-min) {
    padding-left: (@grid-gutter-width / 2);
    padding-right: (@grid-gutter-width / 2);
  }

  &:focus {
    outline: 0;
    user-focus: none;
  }

  img {
    .img-responsive;
  }
}

.right-side {
  .pull-right;
}
@media (min-width: @screen-xs-min) and (max-width: @screen-sm-max) {
  .GridForside {
    // Double columns must span 100% in tablet view (but not the full-width template - hence this hack.)
    .double-column .col-sm-6 {
      width: 100%;
    }
  }
}

.divider {
  margin: @margin10 0;
  &:extend(.clearfix all);
}
// Accessibility

[tabindex] {
  outline: 0;
  user-focus: none;
}
@media (min-width: @screen-sm) {
  // Make columns equal height
  .row-equal-height {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }

  .jump,
  .jumpbox {
    position: absolute;
    top: 0;
    left: 0;
    height: 0;
    width: 0;
    margin: 0;

    li {
      list-style: none;
      display: block;

      a {
        display: block;
        position: absolute;
        top: -1000px;
        left: 0;
        width: 0;
        height: 0;

        &:active,
        &:focus {
          color: #51a7e8;
          top: 0;
          left: 0;
          z-index: 10;
          height: auto;
          width: auto;
        }

        &.btn-gray {
          background-color: @gray-dark;
          color: @white-color;

          &:focus {
            color: @white-color!important;
          }
        }
      }
    }
  }
}
@media (max-width: @screen-sm) {
  .jumpbox {
    display: none;
  }
}
//KU remove gutter from columns

.no-gutter {
  > [class*='col-'] {
    padding-right: 0;
    padding-left: 0;
  }
}

.relative {
  position: relative;
}
// Let's target IE to respect aspect ratios and sizes for img tags containing SVG files - Thanks IE! :-/

.ie9 img[src$=".svg"] {
  width: 100%;
}
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  img[src$=".svg"] {
    width: 100%;
  }
}
//Fix viewport width on Windows phone: http://getbootstrap.com/getting-started/#support-ie10-width
@-ms-viewport {
  width: device-width;
}
// Global search button-size

.btn-global-search {
  .btn {
    height: @input-height-base; // (base line-height + padding + border)
    background-color: @white-color;
    background-image: none; // remove gradient from default button
  }
}
// Content jump to tooltip-opacity

.to-top {
  font-size: 18px;
  color: @ku-jump-to-top;
  margin: 4px 0 4px 5px;
  .glyphicon;
  .glyphicon-menu-up;
}
// Global scroll to top

.scrolltop {
  position: fixed;
  bottom: 3%;
  right: 2%;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: #a1a1a1;
  color: @white-color;
  z-index: 1030;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  .glyphicon-menu-up {
    .glyphicon;
    width: 100%;
    text-align: center;

    &:before {
      display: block;
      margin: 0 auto;
      font-size: 18px;
    }
  }

  &:hover {
    cursor: pointer;
  }
}
// KU loading symbol
@keyframes ku-loading {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}

.ku-loading {
  border-bottom: 3px solid @gray;
  border-left: 3px solid @gray;
  border-right: 3px solid @gray;
  border-top: 3px solid @ku-red;
  border-radius: 100%;
  height: 25px;
  width: 25px;
  animation: ku-loading 0.6s infinite linear;
  overflow: auto;
  position: absolute;
  top: 50%;
  left: 50%;
}

const lang=window.navigator.userLanguage||window.navigator.language,clean=e=>e.replaceAll('\n','').replaceAll('\t','').trim(),getJobteaserRss=(e,t,l)=>{if(e||t){e='https://cms.secure.ku.dk/instacms/parseFeeds/parseFeed.php?url='+encodeURIComponent(e)+'&mimeType=application/rss+xml';const u=Number(l)||null,f=document.getElementById(t);fetch(e).then(e=>e.text()).then(e=>(new window.DOMParser).parseFromString(e,'text/xml')).then(e=>{var n,a;console.log(e);let r='';for([n,a]of e.querySelectorAll('item').entries()){if(n===u)break;var o=clean(a.querySelector('link').textContent),i=clean(a.querySelector('title').textContent),s=a.querySelector('description').textContent,c=a.querySelector('pubDate').textContent,c=new Date(c),c=c.getDate()+'. '+c.toLocaleString(lang,{month:'long'})+' '+c.getFullYear(),d=a.getElementsByTagName('jobOffer:companyName');let t='';for(let e=0;e<d.length;e++)t=d[e].textContent;var g=a.getElementsByTagName('jobOffer:jobLocation');let l='';for(let e=0;e<g.length;e++)l=g[e].textContent;var m=a.querySelector('enclosure').getAttribute('url');r+=`
            <li>
                <div class="media">
                  <a href="${o}" target="_blank" rel="noopener"> 
                    <div class="media-left">
                        <img class="media-object" src="${m}" alt="">
                    </div>
                    <div class="media-body">
                        <h4 class="media-heading">${i}</h4>
                        <div class="job-info">${c} | ${t}</div>
                        <div class="description">${s}</div>
                        <div class="joblocation">${l}</div>
                    </div>
                    </a>
                </div>
            </li>
          `}r=`<ul class="list-unstyled">${r}</ul>`,f.innerHTML='',f.insertAdjacentHTML('beforeend',r)}).catch(e=>{f.innerHTML='Error fetching feed. Try again later.',console.log(e)})}else console.log('Specify feed url and result element id like this: getJobteaserRss("feed-url", "element-id)')};
//# sourceMappingURL=jobteaser-rss.min.js.map